# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Node.js Package

on:
  workflow_dispatch:
    
  #schedule:
  #  - cron: '*/5 * * * *'

jobs:
  check:
    outputs:
      version: ${{ steps.run.outputs.version }}

    runs-on: ubuntu-latest
    steps:
      - run: |
          releaseVersionName=$(curl https://api.github.com/repos/june07/peertube-node/releases/latest -o - | jq .name);
          peertubeReleaseVersionName=$(curl https://api.github.com/repos/Chocobozzz/PeerTube/releases/latest -o - | jq .name);
          
          [[ $peertubeReleaseVersionName =~ [0-9]+\.[0-9]+\.[0-9]+ ]]
          peertubeReleaseVersion=${BASH_REMATCH[0]}
          echo "Setting peertubeReleaseVersion to $peertubeReleaseVersion"
          echo "::set-output name=version::$peertubeReleaseVersion"

          echo "Version name from package.json is $releaseVersionName"
          echo "Version name from peertube release is $peertubeReleaseVersionName"
          if [ $releaseVersionName == $peertubeReleaseVersionName ]; then
            exit 1;
          else
            echo "Version name mismatch found, running additional jobs."
            exit 0;
          fi

  build:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: npm ci
      - run: npm build

  bump:
    needs: [ check, build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            let response = await github.repos.getContent({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: '/package.json'
            })
            let package_json = response.data
            package_json.version = "${{ needs.check.outputs.version }}"
            github.repos.createOrUpdateFileContents({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: '/package.json',
              message: 'automated version bump',
              content: package_json,
              tag_name: "${{ needs.check.outputs.version }}"
            })

  publish-npm:
    needs: bump
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

  publish-gpr:
    needs: bump
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://npm.pkg.github.com/
      - run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

  release:
    needs: [ check, publish-npm ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: "${{ needs.check.outputs.version }}"
            })
